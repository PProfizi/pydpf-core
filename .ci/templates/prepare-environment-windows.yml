steps:
    - powershell: |
       $curDir = Get-Location
       New-Variable -Name "AWP_ROOT$($env:ANSYS_VERSION)" -Value $curDir\server\v$env:ANSYS_VERSION -Force
       write-host "##vso[task.setvariable variable=$((Get-Variable -Name "AWP_ROOT$($env:ANSYS_VERSION)").Name)]$((Get-Variable -Name "AWP_ROOT$($env:ANSYS_VERSION)").Value)"

       "$((Get-Variable -Name "AWP_ROOT$($env:ANSYS_VERSION)").Value)"
      displayName: 'Set AWP_ROOT$(ANSYS_VERSION)'
      condition: always()

    - powershell: |
        Set-StrictMode -Version Latest
        $ErrorActionPreference = "Stop"
        $PSDefaultParameterValues['*:ErrorAction']='Stop'
        git clone --depth 1 git://github.com/pyvista/gl-ci-helpers.git
        powershell gl-ci-helpers/appveyor/install_opengl.ps1
      displayName: 'Install OpenGL'

    - powershell: |
        .ci/setup_headless_display.sh
        pip install -r .ci/requirements_test_xvfb.txt
        python .ci/display_test.py
      displayName: Install test offscreen rendering
      
    - task: UsePythonVersion@0
      inputs:
        versionSpec: $(python.version)
        addToPath: true

    - task: PipAuthenticate@1
      inputs:
        artifactFeeds: 'pyansys'
        onlyAddExtraIndex: true

    - script: |
        pip install -r requirements_build.txt
        python setup.py bdist_wheel
        FOR /F %%a in ('dir /s/b dist\*.whl') do SET WHEELPATH=%%a
        ECHO %WHEELPATH% 
        pip install %WHEELPATH%
        cd tests
        python -c "from ansys.dpf import core; print(core.Report(gpu=False))"
      
      displayName: Install ansys-dpf-core

    - task: PythonScript@0
      inputs:
        scriptSource: 'filePath'
        scriptPath: ".ci/edit_ansys_version.py"
        arguments: "--version $(ANSYS_VERSION)"
      displayName: "Set ansys version"

    - task: UniversalPackages@0
      inputs:
        command: 'download'
        downloadDirectory: '$(System.DefaultWorkingDirectory)'
        feedsToUse: 'internal'
        vstsFeed: '705e121a-9631-49f5-8aaf-c7142856f923'
        vstsFeedPackage: 'dpf-windows'
        vstsPackageVersion: $(vstsPackageVersion)

    - script: |
        @echo on
        cd $(System.DefaultWorkingDirectory)\server\v$(ANSYS_VERSION)\aisol\bin\winx64
        dir $(System.DefaultWorkingDirectory)\server\v$(ANSYS_VERSION)\aisol\bin\winx64
        echo %AWP_ROOT$(ANSYS_VERSION)%
        START /B Ans.Dpf.Grpc.bat --address 127.0.0.1 --port %DPF_PORT%
        python -c "from ansys.dpf import core; core.connect_to_server(port=$(DPF_PORT)); print('Python Connected')"        
      displayName: Start DPF Server
      timeoutInMinutes: 1
